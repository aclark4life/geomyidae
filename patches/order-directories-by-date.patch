diff --git a/handlr.c b/handlr.c
index 0c230d3..5f5a767 100644
--- a/handlr.c
+++ b/handlr.c
@@ -3,6 +3,7 @@
  * by 20h
  */
 
+#include <limits.h>
 #include <unistd.h>
 #include <memory.h>
 #include <netdb.h>
@@ -21,13 +22,48 @@
 #include "ind.h"
 #include "arg.h"
 
+char dir_path[PATH_MAX];
+int datesort(const struct dirent **, const struct dirent **);
+
+int
+datesort(const struct dirent **a, const struct dirent **b)
+{
+	struct stat sbuf1, sbuf2;
+	char path1[PATH_MAX], path2[PATH_MAX];
+	int rv;
+
+	rv = snprintf(path1, sizeof(path1), "%s/%s", dir_path, (*a)->d_name);
+	if (rv < 0 || (size_t)rv >= sizeof(path1)) {
+		perror("snprintf");
+		return 0;
+	}
+	rv = snprintf(path2, sizeof(path2), "%s/%s", dir_path, (*b)->d_name);
+	if (rv < 0 || (size_t)rv >= sizeof(path2)) {
+		perror("snprintf");
+		return 0;
+	}
+
+	if (stat(path1, &sbuf1)) {
+		perror("stat");
+		return 0;
+	}
+	if (stat(path2, &sbuf2)) {
+		perror("stat");
+		return 0;
+	}
+
+	return sbuf1.st_mtime < sbuf2.st_mtime ? -1 : sbuf1.st_mtime > sbuf2.st_mtime;
+}
+
 void
 handledir(int sock, char *path, char *port, char *base, char *args,
 		char *sear, char *ohost, char *chost, int istls)
 {
+	int (*sortorder) (const struct dirent **, const struct dirent **);
+	char ds[PATH_MAX];
 	char *pa, *file, *e, *par, *b;
 	struct dirent **dirent;
-	int ndir, i, ret = 0;
+	int ndir, i, ret = 0, rv;
 	struct stat st;
 	filetype *type;
 
@@ -48,7 +84,21 @@ handledir(int sock, char *path, char *port, char *base, char *args,
 	}
 	free(par);
 
-	ndir = scandir(pa[0] ? pa : ".", &dirent, 0, alphasort);
+	rv = snprintf(dir_path, sizeof(dir_path), "%s", pa);
+	if (rv < 0 || (size_t)rv >= sizeof(dir_path)) {
+		perror("snprintf");
+		return;
+	}
+
+	rv = snprintf(ds, sizeof(ds), "%s/.datesort", pa);
+	if (rv < 0 || (size_t)rv >= sizeof(ds)) {
+		perror("snprintf");
+		return;
+	}
+
+	sortorder = access(ds, F_OK) != -1 ? datesort : alphasort;
+
+	ndir = scandir(pa[0] ? pa : ".", &dirent, 0, sortorder);
 	if (ndir < 0) {
 		perror("scandir");
 		free(pa);
